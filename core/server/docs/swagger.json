{
    "swagger": "2.0",
    "info": {
        "description": "API для системы мониторинга Docker контейнеров",
        "title": "Docker Monitoring System API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "host": "localhost:8000",
    "basePath": "/api",
    "paths": {
        "/actions": {
            "get": {
                "description": "Получает список действий с фильтрацией",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "actions"
                ],
                "summary": "Получение списка действий",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID агента",
                        "name": "agent_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Статус действия",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Тип действия",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список действий",
                        "schema": {
                            "$ref": "#/definitions/models.ActionListResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Создает новое действие для выполнения агентом",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "actions"
                ],
                "summary": "Создание действия",
                "parameters": [
                    {
                        "description": "Данные действия",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateActionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Действие создано",
                        "schema": {
                            "$ref": "#/definitions/models.Action"
                        }
                    },
                    "400": {
                        "description": "Неверные данные",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/actions/{id}/status": {
            "put": {
                "description": "Обновляет статус действия и сохраняет ответ от агента",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "actions"
                ],
                "summary": "Обновление статуса действия",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID действия",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer токен агента",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Ответ агента",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ActionResponse"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Действие обновлено",
                        "schema": {
                            "$ref": "#/definitions/models.Action"
                        }
                    },
                    "400": {
                        "description": "Неверные данные",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Неверный токен агента",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Действие не найдено",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/agent/ping": {
            "post": {
                "description": "Получает данные мониторинга от агента и сохраняет их в базе данных, возвращает список невыполненных действий",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "agent-data"
                ],
                "summary": "Пинг от агента",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer токен агента",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Данные мониторинга от агента",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AgentData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список невыполненных действий",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Action"
                            }
                        }
                    },
                    "400": {
                        "description": "Неверные данные",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Неверный токен агента",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/agents": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Возвращает список всех активных агентов",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "agents"
                ],
                "summary": "Получить список агентов",
                "responses": {
                    "200": {
                        "description": "Список агентов",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Agent"
                            }
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Создает нового агента мониторинга и возвращает токен для подключения",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "agents"
                ],
                "summary": "Создать нового агента",
                "parameters": [
                    {
                        "description": "Данные для создания агента",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateAgentRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Созданный агент",
                        "schema": {
                            "$ref": "#/definitions/models.Agent"
                        }
                    },
                    "400": {
                        "description": "Неверные данные",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/agents/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Возвращает полную информацию об агенте включая метрики, контейнеры, образы и т.д.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "agents"
                ],
                "summary": "Получить детальную информацию об агенте",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID агента",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Детальная информация об агенте",
                        "schema": {
                            "$ref": "#/definitions/models.AgentDetail"
                        }
                    },
                    "400": {
                        "description": "Неверный ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Агент не найден",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Обновляет имя и статус активности агента",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "agents"
                ],
                "summary": "Обновить агента",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID агента",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Поля для обновления",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Агент успешно обновлен",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Неверные данные",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Удаляет агента из системы мониторинга",
                "tags": [
                    "agents"
                ],
                "summary": "Удалить агента",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID агента",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Агент успешно удален",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Неверный ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/agents/{id}/containers": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Возвращает список контейнеров на конкретном агенте",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "agents"
                ],
                "summary": "Получить контейнеры агента",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID агента",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список контейнеров агента",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Container"
                            }
                        }
                    },
                    "400": {
                        "description": "Неверный ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/agents/{id}/metrics": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Возвращает историю метрик агента (CPU, память, сеть)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "agents"
                ],
                "summary": "Получить метрики агента",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID агента",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Лимит записей (по умолчанию 50)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "История метрик агента",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "400": {
                        "description": "Неверный ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/agents/{agent_id}/nginx-config": {
            "get": {
                "description": "Возвращает конфигурацию nginx для указанного агента",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nginx"
                ],
                "summary": "Получить конфигурацию nginx агента",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID агента",
                        "name": "agent_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AgentNginxConfig"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/domains": {
            "get": {
                "description": "Возвращает список всех доменов с их маршрутами",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domains"
                ],
                "summary": "Получить список доменов",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DomainListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "description": "Создает новый домен с указанным агентом",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domains"
                ],
                "summary": "Создать новый домен",
                "parameters": [
                    {
                        "description": "Данные домена",
                        "name": "domain",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateDomainRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Domain"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/domains/routes": {
            "post": {
                "description": "Создает новый маршрут для домена",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domain-routes"
                ],
                "summary": "Создать маршрут домена",
                "parameters": [
                    {
                        "description": "Данные маршрута",
                        "name": "route",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateDomainRouteRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.DomainRoute"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/domains/routes/{id}": {
            "put": {
                "description": "Обновляет информацию о маршруте домена",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domain-routes"
                ],
                "summary": "Обновить маршрут домена",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID маршрута",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные для обновления",
                        "name": "route",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateDomainRouteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DomainRoute"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "description": "Удаляет маршрут домена",
                "tags": [
                    "domain-routes"
                ],
                "summary": "Удалить маршрут домена",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID маршрута",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/domains/{domain_id}/routes": {
            "get": {
                "description": "Возвращает все маршруты для указанного домена",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domain-routes"
                ],
                "summary": "Получить маршруты домена",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID домена",
                        "name": "domain_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DomainRouteListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/domains/{id}": {
            "get": {
                "description": "Возвращает детальную информацию о домене",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domains"
                ],
                "summary": "Получить домен по ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID домена",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DomainDetail"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "put": {
                "description": "Обновляет информацию о домене",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domains"
                ],
                "summary": "Обновить домен",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID домена",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные для обновления",
                        "name": "domain",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateDomainRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Domain"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "description": "Удаляет домен и все его маршруты",
                "tags": [
                    "domains"
                ],
                "summary": "Удалить домен",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID домена",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/domains/{id}/status": {
            "get": {
                "description": "Возвращает статус домена с информацией о контейнерах",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domains"
                ],
                "summary": "Получить статус домена",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID домена",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DomainStatus"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/containers": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Возвращает список всех контейнеров с фильтрацией",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "containers"
                ],
                "summary": "Получить список контейнеров",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID агента для фильтрации",
                        "name": "agent_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Статус для фильтрации",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Поиск по имени или образу",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список контейнеров",
                        "schema": {
                            "$ref": "#/definitions/models.ContainerListResponse"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/containers/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Возвращает полную информацию о контейнере включая метрики и историю",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "containers"
                ],
                "summary": "Получить детальную информацию о контейнере",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID контейнера",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Детальная информация о контейнере",
                        "schema": {
                            "$ref": "#/definitions/models.ContainerDetail"
                        }
                    },
                    "400": {
                        "description": "Неверный ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Контейнер не найден",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/containers/{id}/logs": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Возвращает последние логи контейнера (до 100 записей)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "containers"
                ],
                "summary": "Получить логи контейнера",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID контейнера",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Логи контейнера",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ContainerLog"
                            }
                        }
                    },
                    "400": {
                        "description": "Неверный ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/dashboard": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Возвращает KPI метрики, графики использования ресурсов и топ контейнеры",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dashboard"
                ],
                "summary": "Получить данные дашборда",
                "responses": {
                    "200": {
                        "description": "Данные дашборда",
                        "schema": {
                            "$ref": "#/definitions/models.DashboardData"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/images": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Возвращает список всех Docker образов с фильтрацией",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "images"
                ],
                "summary": "Получить список Docker образов",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID агента для фильтрации",
                        "name": "agent_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Поиск по ID образа или тегу",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список образов",
                        "schema": {
                            "$ref": "#/definitions/models.ImageListResponse"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Выполняет вход в систему и возвращает JWT токен",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Аутентификация пользователя",
                "parameters": [
                    {
                        "description": "Данные для входа",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешная аутентификация",
                        "schema": {
                            "$ref": "#/definitions/models.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный JSON",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Неверные учетные данные",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/notifications/settings": {
            "get": {
                "description": "Получает текущие настройки уведомлений",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notifications"
                ],
                "summary": "Получение настроек уведомлений",
                "responses": {
                    "200": {
                        "description": "Настройки уведомлений",
                        "schema": {
                            "$ref": "#/definitions/models.NotificationSettings"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Обновляет настройки уведомлений",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notifications"
                ],
                "summary": "Обновление настроек уведомлений",
                "parameters": [
                    {
                        "description": "Настройки уведомлений",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.NotificationSettings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Настройки обновлены",
                        "schema": {
                            "$ref": "#/definitions/models.NotificationSettings"
                        }
                    },
                    "400": {
                        "description": "Неверные данные",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/notifications/test": {
            "post": {
                "description": "Отправляет тестовое уведомление в Telegram",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notifications"
                ],
                "summary": "Отправка тестового уведомления",
                "responses": {
                    "200": {
                        "description": "Уведомление отправлено",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Не настроен токен бота",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка отправки",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Action": {
            "type": "object",
            "properties": {
                "agent_id": {
                    "type": "string"
                },
                "completed": {
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "payload": {
                    "type": "object",
                    "additionalProperties": true
                },
                "response": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "models.ActionListResponse": {
            "type": "object",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Action"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "models.ActionResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "response": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.Agent": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "last_ping": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "public_ip": {
                    "type": "string"
                },
                "status": {
                    "description": "online, offline, unknown",
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "models.AgentData": {
            "type": "object",
            "properties": {
                "docker": {
                    "$ref": "#/definitions/models.DockerInfo"
                },
                "metrics": {
                    "$ref": "#/definitions/models.Metrics"
                }
            }
        },
        "models.AgentDetail": {
            "type": "object",
            "properties": {
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ContainerDetail"
                    }
                },
                "created": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ImageDetail"
                    }
                },
                "is_active": {
                    "type": "boolean"
                },
                "last_ping": {
                    "type": "string"
                },
                "metrics": {
                    "$ref": "#/definitions/models.AgentMetrics"
                },
                "name": {
                    "type": "string"
                },
                "public_ip": {
                    "type": "string"
                },
                "status": {
                    "description": "online, offline, unknown",
                    "type": "string"
                },
                "system_metrics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.SystemMetric"
                    }
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "models.AgentMetrics": {
            "type": "object",
            "properties": {
                "cpu": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CPUMetricCurrent"
                    }
                },
                "disk": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.DiskMetricCurrent"
                    }
                },
                "memory": {
                    "$ref": "#/definitions/models.MemoryMetricCurrent"
                },
                "network": {
                    "$ref": "#/definitions/models.NetworkMetricCurrent"
                }
            }
        },
        "models.AgentNginxConfig": {
            "type": "object",
            "properties": {
                "agent_id": {
                    "type": "string"
                },
                "domains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NginxConfig"
                    }
                }
            }
        },
        "models.CPUInfo": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "usage": {
                    "type": "number"
                }
            }
        },
        "models.CPUMetricCurrent": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "usage": {
                    "type": "number"
                }
            }
        },
        "models.CPUThresholdConfig": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "threshold": {
                    "type": "integer"
                }
            }
        },
        "models.Container": {
            "type": "object",
            "properties": {
                "agent_id": {
                    "description": "Дополнительные поля для совместимости с frontend",
                    "type": "string"
                },
                "agent_name": {
                    "type": "string"
                },
                "container_id": {
                    "type": "string"
                },
                "cpu_usage_percent": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_id": {
                    "type": "string"
                },
                "ip_address": {
                    "type": "string"
                },
                "mac_address": {
                    "type": "string"
                },
                "memory_usage_mb": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "network_received_bytes": {
                    "type": "integer"
                },
                "network_sent_bytes": {
                    "type": "integer"
                },
                "ping_id": {
                    "type": "string"
                },
                "restart_count": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.ContainerDetail": {
            "type": "object",
            "properties": {
                "agent": {
                    "$ref": "#/definitions/models.Agent"
                },
                "agent_id": {
                    "description": "Дополнительные поля для совместимости с frontend",
                    "type": "string"
                },
                "agent_name": {
                    "type": "string"
                },
                "container_id": {
                    "type": "string"
                },
                "cpu_usage_percent": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "history": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ContainerMetric"
                    }
                },
                "id": {
                    "type": "string"
                },
                "image_id": {
                    "type": "string"
                },
                "ip_address": {
                    "type": "string"
                },
                "logs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ContainerLog"
                    }
                },
                "mac_address": {
                    "type": "string"
                },
                "memory_usage_mb": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "network_received_bytes": {
                    "type": "integer"
                },
                "network_sent_bytes": {
                    "type": "integer"
                },
                "ping_id": {
                    "type": "string"
                },
                "restart_count": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.ContainerInfo": {
            "type": "object",
            "properties": {
                "cpu": {
                    "type": "number"
                },
                "created": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "logs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "mac": {
                    "type": "string"
                },
                "memory": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "network": {
                    "$ref": "#/definitions/models.ContainerNetworkInfo"
                },
                "restart_count": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.ContainerListResponse": {
            "type": "object",
            "properties": {
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ContainerDetail"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "models.ContainerLog": {
            "type": "object",
            "properties": {
                "container_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "log_line": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "models.ContainerMetric": {
            "type": "object",
            "properties": {
                "cpu_usage": {
                    "type": "number"
                },
                "memory_usage": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "models.ContainerNetworkInfo": {
            "type": "object",
            "properties": {
                "received": {
                    "type": "integer"
                },
                "sent": {
                    "type": "integer"
                }
            }
        },
        "models.CreateActionRequest": {
            "type": "object",
            "properties": {
                "agent_id": {
                    "type": "string"
                },
                "payload": {
                    "type": "object",
                    "additionalProperties": true
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "models.CreateAgentRequest": {
            "description": "Запрос на создание нового агента мониторинга",
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Production Server 1"
                }
            }
        },
        "models.CreateDomainRequest": {
            "type": "object",
            "properties": {
                "agent_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "example": "dashboard.domain.net"
                },
                "ssl_enabled": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "models.CreateDomainRouteRequest": {
            "type": "object",
            "properties": {
                "container_name": {
                    "type": "string",
                    "example": "my-container"
                },
                "domain_id": {
                    "type": "string"
                },
                "path": {
                    "type": "string",
                    "example": "/api"
                },
                "port": {
                    "type": "string",
                    "example": "3000"
                }
            }
        },
        "models.DashboardData": {
            "type": "object",
            "properties": {
                "agents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Agent"
                    }
                },
                "offline_agents": {
                    "type": "integer"
                },
                "online_agents": {
                    "type": "integer"
                },
                "recent_metrics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.RecentMetric"
                    }
                },
                "system_overview": {
                    "$ref": "#/definitions/models.SystemOverview"
                },
                "total_agents": {
                    "type": "integer"
                }
            }
        },
        "models.DiskInfo": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "read_bytes": {
                    "type": "integer"
                },
                "reads": {
                    "type": "integer"
                },
                "write_bytes": {
                    "type": "integer"
                },
                "writes": {
                    "type": "integer"
                }
            }
        },
        "models.DiskMetricCurrent": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "read_bytes": {
                    "type": "integer"
                },
                "read_speed": {
                    "type": "integer"
                },
                "write_bytes": {
                    "type": "integer"
                },
                "write_speed": {
                    "type": "integer"
                }
            }
        },
        "models.DockerInfo": {
            "type": "object",
            "properties": {
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ContainerInfo"
                    }
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ImageInfo"
                    }
                }
            }
        },
        "models.Domain": {
            "type": "object",
            "properties": {
                "agent_id": {
                    "description": "ID агента, на котором размещен домен",
                    "type": "string"
                },
                "agent_ip": {
                    "description": "IP адрес агента",
                    "type": "string"
                },
                "agent_name": {
                    "description": "Дополнительные поля для совместимости с frontend",
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "description": "активен ли домен",
                    "type": "boolean"
                },
                "name": {
                    "description": "например: \"dashboard.domain.net\"",
                    "type": "string"
                },
                "ssl_enabled": {
                    "description": "включен ли SSL",
                    "type": "boolean"
                },
                "updated": {
                    "type": "string"
                }
            }
        },
        "models.DomainDetail": {
            "type": "object",
            "properties": {
                "agent": {
                    "$ref": "#/definitions/models.Agent"
                },
                "agent_id": {
                    "description": "ID агента, на котором размещен домен",
                    "type": "string"
                },
                "agent_ip": {
                    "description": "IP адрес агента",
                    "type": "string"
                },
                "agent_name": {
                    "description": "Дополнительные поля для совместимости с frontend",
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "description": "активен ли домен",
                    "type": "boolean"
                },
                "name": {
                    "description": "например: \"dashboard.domain.net\"",
                    "type": "string"
                },
                "routes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.DomainRoute"
                    }
                },
                "ssl_enabled": {
                    "description": "включен ли SSL",
                    "type": "boolean"
                },
                "updated": {
                    "type": "string"
                }
            }
        },
        "models.DomainListResponse": {
            "type": "object",
            "properties": {
                "domains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.DomainDetail"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "models.DomainRoute": {
            "type": "object",
            "properties": {
                "container_name": {
                    "description": "имя контейнера",
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "domain_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "path": {
                    "description": "путь (опционально, для /api/*)",
                    "type": "string"
                },
                "port": {
                    "description": "порт контейнера",
                    "type": "string"
                },
                "updated": {
                    "type": "string"
                }
            }
        },
        "models.DomainRouteListResponse": {
            "type": "object",
            "properties": {
                "routes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.DomainRoute"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "models.DomainStatus": {
            "type": "object",
            "properties": {
                "agent_id": {
                    "type": "string"
                },
                "agent_ip": {
                    "type": "string"
                },
                "agent_name": {
                    "type": "string"
                },
                "domain_id": {
                    "type": "string"
                },
                "domain_name": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "routes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.RouteStatus"
                    }
                },
                "ssl_enabled": {
                    "type": "boolean"
                }
            }
        },
        "models.ImageDetail": {
            "type": "object",
            "properties": {
                "agent": {
                    "$ref": "#/definitions/models.Agent"
                },
                "architecture": {
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_id": {
                    "type": "string"
                },
                "ping_id": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.ImageInfo": {
            "type": "object",
            "properties": {
                "architecture": {
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.ImageListResponse": {
            "type": "object",
            "properties": {
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ImageDetail"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "models.LoginRequest": {
            "description": "Запрос на аутентификацию пользователя",
            "type": "object",
            "properties": {
                "password": {
                    "type": "string",
                    "example": "admin123"
                },
                "username": {
                    "type": "string",
                    "example": "admin"
                }
            }
        },
        "models.LoginResponse": {
            "description": "Ответ с JWT токеном и информацией о пользователе",
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                }
            }
        },
        "models.MemoryInfo": {
            "type": "object",
            "properties": {
                "ram": {
                    "$ref": "#/definitions/models.RAMInfo"
                },
                "swap": {
                    "$ref": "#/definitions/models.SwapInfo"
                }
            }
        },
        "models.MemoryMetricCurrent": {
            "type": "object",
            "properties": {
                "ram_percent": {
                    "type": "number"
                },
                "ram_total": {
                    "type": "integer"
                },
                "ram_usage": {
                    "type": "integer"
                },
                "swap_percent": {
                    "type": "number"
                },
                "swap_total": {
                    "type": "integer"
                },
                "swap_usage": {
                    "type": "integer"
                }
            }
        },
        "models.Metrics": {
            "type": "object",
            "properties": {
                "cpu": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CPUInfo"
                    }
                },
                "disk": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.DiskInfo"
                    }
                },
                "memory": {
                    "$ref": "#/definitions/models.MemoryInfo"
                },
                "network": {
                    "$ref": "#/definitions/models.NetworkInfo"
                }
            }
        },
        "models.NetworkInfo": {
            "type": "object",
            "properties": {
                "public_ip": {
                    "type": "string"
                },
                "received": {
                    "type": "integer"
                },
                "sent": {
                    "type": "integer"
                }
            }
        },
        "models.NetworkMetricCurrent": {
            "type": "object",
            "properties": {
                "public_ip": {
                    "type": "string"
                },
                "received_bytes": {
                    "type": "integer"
                },
                "received_speed": {
                    "type": "integer"
                },
                "sent_bytes": {
                    "type": "integer"
                },
                "sent_speed": {
                    "type": "integer"
                }
            }
        },
        "models.NginxConfig": {
            "type": "object",
            "properties": {
                "agent_ip": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "routes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NginxRoute"
                    }
                },
                "ssl_cert": {
                    "$ref": "#/definitions/models.SSLCertificate"
                },
                "ssl_enabled": {
                    "type": "boolean"
                }
            }
        },
        "models.NginxRoute": {
            "type": "object",
            "properties": {
                "container_name": {
                    "description": "имя контейнера",
                    "type": "string"
                },
                "path": {
                    "description": "например: \"/\" или \"/api\"",
                    "type": "string"
                },
                "port": {
                    "description": "порт контейнера",
                    "type": "string"
                }
            }
        },
        "models.NotificationConfig": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "models.NotificationConfigurations": {
            "type": "object",
            "properties": {
                "agent_offline": {
                    "$ref": "#/definitions/models.NotificationConfig"
                },
                "container_stopped": {
                    "$ref": "#/definitions/models.NotificationConfig"
                },
                "cpu_threshold": {
                    "$ref": "#/definitions/models.CPUThresholdConfig"
                },
                "ram_threshold": {
                    "$ref": "#/definitions/models.RAMThresholdConfig"
                }
            }
        },
        "models.NotificationSettings": {
            "type": "object",
            "properties": {
                "notifications": {
                    "$ref": "#/definitions/models.NotificationConfigurations"
                },
                "telegram_bot_token": {
                    "type": "string"
                },
                "telegram_chat_id": {
                    "type": "string"
                }
            }
        },
        "models.RAMInfo": {
            "type": "object",
            "properties": {
                "total": {
                    "type": "integer"
                },
                "usage": {
                    "type": "integer"
                }
            }
        },
        "models.RAMThresholdConfig": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "threshold": {
                    "type": "integer"
                }
            }
        },
        "models.RecentMetric": {
            "type": "object",
            "properties": {
                "agent_id": {
                    "type": "string"
                },
                "agent_name": {
                    "type": "string"
                },
                "cpu_usage": {
                    "type": "number"
                },
                "public_ip": {
                    "type": "string"
                },
                "ram_usage": {
                    "type": "number"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "models.RouteStatus": {
            "type": "object",
            "properties": {
                "container_name": {
                    "type": "string"
                },
                "container_status": {
                    "description": "running, stopped, etc.",
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "path": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                },
                "route_id": {
                    "type": "string"
                }
            }
        },
        "models.SSLCertificate": {
            "type": "object",
            "properties": {
                "private_key": {
                    "type": "string"
                },
                "public_key": {
                    "type": "string"
                }
            }
        },
        "models.SwapInfo": {
            "type": "object",
            "properties": {
                "total": {
                    "type": "integer"
                },
                "usage": {
                    "type": "integer"
                }
            }
        },
        "models.SystemMetric": {
            "type": "object",
            "properties": {
                "cpu_usage": {
                    "type": "number"
                },
                "disk_read": {
                    "type": "integer"
                },
                "disk_write": {
                    "type": "integer"
                },
                "network_received": {
                    "type": "integer"
                },
                "network_sent": {
                    "type": "integer"
                },
                "public_ip": {
                    "type": "string"
                },
                "ram_usage": {
                    "type": "number"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "models.SystemOverview": {
            "type": "object",
            "properties": {
                "running_containers": {
                    "type": "integer"
                },
                "total_containers": {
                    "type": "integer"
                },
                "total_cpu_cores": {
                    "type": "integer"
                },
                "total_ram_mb": {
                    "type": "integer"
                }
            }
        },
        "models.UpdateDomainRequest": {
            "type": "object",
            "properties": {
                "agent_id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "ssl_enabled": {
                    "type": "boolean"
                }
            }
        },
        "models.UpdateDomainRouteRequest": {
            "type": "object",
            "properties": {
                "container_name": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "path": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "last_login": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}